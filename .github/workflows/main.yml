name: "Screenshots"

on: [push]

jobs:

  generate-screenshots-job:
    runs-on: ubuntu-latest
    name: Make screenshots
    steps:

    # - name: Notify Slack
    #   uses: drilonrecica/action-slack-notify@0.0.3
    #   env:
    #     SLACK_CHANNEL: franks-test-kanaal
    #     SLACK_COLOR: '#3278BD'
    #     SLACK_ICON: https://upload.wikimedia.org/wikipedia/commons/6/68/NoxttonBot.png?size=48
    #     SLACK_MESSAGE: 'Hoi :rocket:'
    #     SLACK_TITLE: Title
    #     SLACK_USERNAME: drilonrecica
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - uses: actions/slack-notifier-action@v1
      with:
        webhook_url:  ${{ secrets.SLACK_WEBHOOK }}
        job: {
          "channel": "franks-test-kanaal",
          "text": "testing slack messaging",
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "Screenshots have been made."
              },
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "View Results",
                  "emoji": true
                },
                "value": "click_me_123",
                "url": "http://lp.dutchchannels.com/nfn/1/result.html",
                "action_id": "button-action"
              }
            }
          ]
        }

    # Load repository onto ubuntu worker machine
    - name: Checkout
      uses: actions/checkout@v2

    # Show env variables
    - uses: FranzDiebold/github-env-vars-action@v1.2.1
    - name: Print environment variables
      run: |
        echo "GITHUB_REPOSITORY_SLUG=$GITHUB_REPOSITORY_SLUG"
        echo "GITHUB_REPOSITORY_OWNER=$GITHUB_REPOSITORY_OWNER"
        echo "GITHUB_REPOSITORY_OWNER_SLUG=$GITHUB_REPOSITORY_OWNER_SLUG"
        echo "GITHUB_REPOSITORY_NAME=$GITHUB_REPOSITORY_NAME"
        echo "GITHUB_REPOSITORY_NAME_SLUG=$GITHUB_REPOSITORY_NAME_SLUG"
        echo "GITHUB_REF_SLUG=$GITHUB_REF_SLUG"
        echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
        echo "GITHUB_REF_NAME_SLUG=$GITHUB_REF_NAME_SLUG"
        echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT"
        echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"

    # # Upload result
    # - name: Upload from public_html via FTP
    #   uses: airvzxf/ftp-deployment-action@latest
    #   with:
    #     server: ${{ secrets.FTP_SERVER }}
    #     user: ${{ secrets.FTP_USERNAME }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     local_dir: /github/workspace/screenshots/${{ steps.generate-html.outputs.github-run-id }}
    #     remote_dir: /nfn/${{ steps.generate-html.outputs.github-run-id }}
    #     delete: "false"

    # Collect static gatsby site urls
    - name: Gatsby collect urls
      id: collect-static-gatsby
      uses: frank7huysen/browserstack-screenshots@v1.4.6
      with:
        action: 'collect-static-gatsby'
        gatsby-public-folder: ./gatsby-public
        website-domain: https://staging.try.theaterthuis.nl/nl-nl/

    # Generate screenshots
    - name: Generate screenshots
      id: generate-screenshots
      env:
        CI: true
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_PASSWORD: ${{ secrets.BROWSERSTACK_PASSWORD }}
      uses: frank7huysen/browserstack-screenshots@v1.4.6
      with:
        action: 'generate-screenshots'
        screenshot-page-urls: ${{ steps.collect-static-gatsby.outputs.urls }}

    # Download screenshots from browserstack
    - name: Download screenshots
      id: download-screenshots
      uses: frank7huysen/browserstack-screenshots@v1.4.6
      with:
        action: 'download-screenshots'
        job-result: ${{ steps.generate-screenshots.outputs.job-result }}

    # Generate pdf with screenshots
    - name: Generate result Html
      id: generate-html
      uses: frank7huysen/browserstack-screenshots@v1.4.6
      with:
        action: 'generate-html'
        job-result: ${{ steps.generate-screenshots.outputs.job-result }}

    # Upload artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: browserstack-screenshots
        path: ${{ steps.download-screenshots.outputs.screenshots-directory }}



